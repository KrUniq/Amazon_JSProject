<!--Amazon.ejs-->
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Продукты Amazon</title>
    <!-- Подключение Bootstrap CSS для адаптивного дизайна -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Подключение Chart.js для создания графиков -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Подключение Plotly.js для создания графиков -->
    <script src="https://cdn.jsdelivr.net/npm/plotly.js-dist-min"></script>
</head>
<body>
    <div class="container">
        <h1>Продукты Amazon</h1>

        <!-- Форма для добавления нового продукта -->
        <h3>Добавить новый продукт</h3>
        <form action="/products/create" method="POST">
            <div class="mb-3">
                <label for="name" class="form-label">Название</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>
            <div class="mb-3">
                <label for="asin" class="form-label">ASIN</label>
                <input type="text" class="form-control" id="asin" name="asin" required>
            </div>
            <div class="mb-3">
                <label for="price" class="form-label">Цена</label>
                <input type="number" class="form-control" id="price" name="price" step="0.01" required>
            </div>
            <button type="submit" class="btn btn-primary">Создать</button>
        </form>

        <!-- Таблица с продуктами -->
        <h3 class="mt-5">Список продуктов Amazon</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Название</th>
                    <th>Цена</th>
                    <th>Рейтинг</th>
                    <th>Отзывы</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                    <tr>
                        <td><%= product.name %></td>
                        <td><%= product.price %></td>
                        <td><%= product.stars || 'Нет данных' %></td>
                        <td><%= product.total_reviews || 'Нет данных' %></td>
                        <td>
                            <a href="/products/edit/<%= product.asin %>" class="btn btn-warning btn-sm">Редактировать</a>
                            <form action="/products/delete/<%= product.asin %>" method="POST" style="display:inline-block;" onsubmit="return confirm('Вы уверены, что хотите удалить этот продукт?');">
                                <button type="submit" class="btn btn-danger btn-sm">Удалить</button>
                            </form>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <!-- Графики -->
        <h3>Графики</h3>
        <div class="row">
            <div class="col-12 col-md-4">
                <canvas id="priceChart"></canvas>
            </div>
            <div class="col-12 col-md-4">
                <canvas id="ratingChart"></canvas>
            </div>
            <div class="col-12 col-md-4">
                <div id="priceReviewsChart"></div> 
            </div>
        </div>

        <!-- Сводная статистика -->
        <div id="statistics" class="mt-4">
            <h3>Сводная статистика:</h3>
            <p>Средняя цена: <%= avgPrice || 'Нет данных' %></p>
            <p>Средний рейтинг: <%= avgRating || 'Нет данных' %></p>
            <p>Среднее количество отзывов: <%= avgReviews || 'Нет данных' %></p>
        </div>
    </div>

    <!-- Подключаем внешний файл с JavaScript -->
    <script>
        // Данные для графиков
        const prices = <%= JSON.stringify(products.map(product => product.price)) %>;
        const ratings = <%= JSON.stringify(products.map(product => product.stars)) %>;
        const reviews = <%= JSON.stringify(products.map(product => product.total_reviews)) %>;

        // Функция для удаления выбросов (метод межквартильного диапазона)
        function removeOutliers(data) {
            const sorted = [...data].sort((a, b) => a - b);
            const q1 = sorted[Math.floor((sorted.length / 4))];  // Первый квартиль
            const q3 = sorted[Math.floor((sorted.length * 3) / 4)];  // Третий квартиль
            const iqr = q3 - q1;  // Интерквартильный диапазон
            const lowerBound = q1 - 1.5 * iqr;
            const upperBound = q3 + 1.5 * iqr;
            
            return data.filter(value => value >= lowerBound && value <= upperBound);
        }

        // Убираем выбросы из данных
        const filteredPrices = removeOutliers(prices);
        const filteredRatings = removeOutliers(ratings);  
        const filteredReviews = removeOutliers(reviews);

        // График распределения цен по диапазонам (гистограмма)
        const priceBins = [0, 500, 1000, 1500, 2000, 2500, 3000];
        const priceBinCounts = getBins(filteredPrices, priceBins);
        const priceBinLabels = priceBins.slice(0, -1).map((bin, index) => `${bin} - ${priceBins[index + 1]}`);

        const priceCtx = document.getElementById('priceChart').getContext('2d');
        new Chart(priceCtx, {
            type: 'bar',
            data: {
                labels: priceBinLabels,
                datasets: [{
                    label: 'Количество товаров в ценовом диапазоне',
                    data: priceBinCounts,
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // График распределения рейтингов по диапазонам (гистограмма)
        const ratingBins = [0, 1, 2, 3, 4, 5];
        const ratingBinCounts = getBins(filteredRatings, ratingBins);
        const ratingBinLabels = ratingBins.slice(0, -1).map((bin, index) => `${bin} - ${ratingBins[index + 1]}`);

        const ratingCtx = document.getElementById('ratingChart').getContext('2d');
        new Chart(ratingCtx, {
            type: 'bar',
            data: {
                labels: ratingBinLabels,
                datasets: [{
                    label: 'Количество товаров по рейтингу',
                    data: ratingBinCounts,
                    backgroundColor: 'rgba(255, 159, 64, 0.5)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Функция для группировки данных в диапазоны
        function getBins(data, bins) {
            const binCounts = new Array(bins.length - 1).fill(0);
            data.forEach(value => {
                for (let i = 0; i < bins.length - 1; i++) {
                    if (value >= bins[i] && value < bins[i + 1]) {
                        binCounts[i]++;
                        break;
                    }
                }
            });
            return binCounts;
        }
    </script>
</body>
</html>
